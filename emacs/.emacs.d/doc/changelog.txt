changelog of emacs profile
author: zhengsw@yview.cn
date: 16:10 2022/06/03

20:55 2023/01/02
1) package: 禁用 cmake-ide 之后 company-mode 依赖 clang 进行补全，但 company-clang-args 没有能被配置;
   - lsp-mode: 放开之前禁用的 lsp-completion 补全功能，lsp-completion-enable;
   - lsp-mode: 将 lsp-completion-enable-additional-text-edit 设置为 nil，禁用 lsp 补全时自动编辑代码,
     例如自动添加 include 头文件;
2) customize: 将 confirm-kill-emacs 配置为 y-or-n-p, 简化输入，'yes-or-no-p' 比较麻烦;

11:59 2022/12/30
1) pacakge: 禁用 cmake-ide; cmake-ide 在打开大型项目如 vpp 时，每次打开新文件时都解析 compile_commands.json 导致太慢;
   - projectile: 将 f7 快捷键绑定为 projectile-compile-project, 并且 compile 之前不 prompt(compilation-read-command 设置为 nil);
   - projectile: 将 c-c p c 绑定为 compile 之前进行 prompt 的 projectile-compile-project; 没有生效;
2) customize:
   - 调整 read-process-output-max(每次读取子进程输出块大小) 变量为 1024k, 加快如 compile_commands.json 的读取;
   - 调整 gc-cons-threshold(gc 阀值) 为 250MB, 推迟 gc 执行频次，以此提升性能;
3) 心得:
   - lsp-mode 使用 clangd 时需要当前文件的直系路径下存在 compile_commands.json 文件, 就可以愉快地使用 lsp-mode, company-mode 了;
   - compile 是 emacs 自带的编译命令，默认使用 "make -k" 进行编译，工作目录为变量 default-directory 的值;
   - compile 默认执行前会 prompt, 配置 compilation-read-command 为 nil 可关闭 prompt; 关闭 prompt 之后如果需要临时调整 compile 命令
     可 C-u compile 则会总是会进行 prompt;
   - projectile 使用 compile 实现 projectile-compile-project 命令; 通过在 .dir-locals.el 中配置 projectile-project-compilation-cmd
     与 projectile-project-compilation-dir 可以为项目定制 compile 命令;
   - projectile-project-compilation-dir 为相对路径，相对 projectile 的项目根路径(如存在 Makefile, .git 等的顶层目录);
   - projectile 通过在执行 compile 之前配置 default-direcory 变量达到配置 compile 工作目录的效果;
4) 配置备份:
尝试根据 .dir-locals.el 决定是否启用 lsp-mode, 定义 local variable 并且指定默认值;
;; (defvar enable-lsp-mode)
;; (setq enable-lsp-mode t)
;; (make-variable-buffer-local 'enable-lsp-mode)

;; (defvar enable-lsp-mode)
;; (make-variable-buffer-local 'enable-lsp-mode)
;; (setq-default enable-lsp-mode t)


15:48 2022/12/07
1) emacs 退出时添加确认动作，修改见 config/custom.el 中 (confirm-kill-emacs 'yes-or-no-p);
2) magit 配置 commit column 长度默认为 100 字符;
3) lsp-mode 配置变量'lsp-enable-on-type-formatting' 为 nil, 禁止在输入时进行 format;

16:35 2022/08/06
1) use-package company 配置错误: company 的 package 名字并不叫 'company-mode', 就叫 'company':
 (use-package company-c-headers)
 (use-package company-mode
   :hook (prog-mode . company-mode)
   :bind ("C-c j" . 'company-complete-common)
   :custom (company-idle-delay 0 "no delay")
   :config (add-to-list 'company-backends 'company-c-headers))
同时移除 package-selected-packages 中 company-mode 项，其会作为 compay-c-headers 的依赖而安装;
2) 添加 compilation-mode 的 compition-scroll-ouput 配置，滚动到首个错误;
3) spacemacs-theme 中定义了颜色'highlight'，但是其在 highlight 和 region 场景的 face 的 backgound
   都设置为了 highlight 颜色，导致 c/c++ 中如果一个符号被高亮了再来进行 mark-region 则无法分辨;
   所以将 highlight 场景的 face 颜色进行重新设置;
4) 将 doxymacs 的 use-package :ensure 配置为 nil，不要自动下载，因为 elpa 中已经无法下载到到它了.

16:30 2022/07/31
1) 调整 use-package 中 python-mode 的配置，以下代码有问题会导致无限递归，要求在 python-mode 时调用 python-mode 来开启 python-mode?
 (use-package python-mode
   :hook (python-mode)
   :custom (tab-width 4))
2) 在 lsp-mode 中关闭了 lsp-comletion-enable 因为其对于 c++ 头文件的补全效果很糟糕，
   但是之前的配置中无条件关闭了该功能，修改为只在 c-mode, c++-mode 下禁用 lsp 补全;

17:28 2022/06/03
1) 移除不需要的 elpa 源:
;; (add-to-list 'package-archives' ("marmalade" . "http://marmalade-repo.org/packages/") t)
;; (add-to-list 'package-archives' ("melpa-m"   . "http://melpa.milkbox.net/packages/") t)
;; (add-to-list 'package-archives' ("elpa"      . "http://tromey.com/elpa/") t)
;; (add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))
2) 调整为多文件分类进行组织 init.el 配置文件;

;;; record_00 04:32 2016/07/10 -> 配置各种插件，补全、代码跳转、代码导航等
;;; record_01 13:00 2016/08/29 -> 添加 expand-region 和 highlight-symbol
;;; record_02 20:15 2016/12/07 -> 解决在 shell 中运行时报没有 tty 字体问题;
;;;                               重新实现 if-zero-code 对换行结尾的区域更友好
;;; record_03 13:51 2016/12/15 -> 解决 tramp 打开远程文件或者 /su::/root/... 输入显示卡死问题
;;;                               加入行高亮，列高亮功能
;;;                               默认总是启用 server 模式，随时准备 emacsclient 极速连接
;;; record_04 09:55 2016/12/28 -> 添加 highlight-parentheses 插件，彩色高亮配对括号
;;; record_05 10:38 2016/12/30 -> 将 tab 替换为空格只在编程语言模式下生效，tab 对于 Makefile 很重要
;;; record_06 12:50 2017/09/10 -> 添加 slime，go-mode 以及 exec-path-from-shell.并且重新调整文件结构，进行分类整理
;;; record_07 13:15 2018/01/29 -> 配置 windows 版本下的 tramp 默认使用 plink 进行远程连接
;;; record_08 23:44 2018/01/30 -> 添加 gtags, magit, 以及配置 python-mode 下缩进为4个空格
;;; record_09 00:14 2018/03/22 -> 添加 align-regexp 快捷键(C-c |), 调整 align 快捷键为 C-c \;
;;;                               添加一众 er/mark-xxx 快捷键；
;;;                               屏蔽 idle-highlight, 总是高亮光标所在处的话又和选中一个颜色，不太友好
;;; record_10 00:16 2018/03/23 -> 添加 yasnippet ya-insert-snippet 快捷键为 C-c C-y, 当有 region 使用 ya-insert-snippet 时
;;;                               默认将 region 使用 $0 内容保留.
;;; record_11 17:30 2018/05/09 -> 调整 align 快捷键为 C-c \, align-regexp 为 C-c |;
;;;                               打开 (require 'expand-region)，虽然内置了，还是需要加载;
;;;                               设置 C++ 默认编码风格为 linux style;
;;;                               使用 highlight-symbol 提供的 C-x w . 手动高亮当前 symbol 更好的哟
;;; record_12 11:13 2018/07/14 -> highlight-symbol-at-point 快捷键调整为 C-c w
;;;                               er/mark-word   快捷键设置为 C-c [
;;;                               er/mark-symbol 快捷键设置为 C-c ]
;;;                               projectile-compile-project 快捷键设置为 F7
;;; record_13 18:59 2018/07/21 -> 将 win/.emacs 中对 windows 的特别处理代码(主要为解决 emacs25 卡顿问题)合并到本文件
;;;                               设置 password-cache-expiry 为 nil(默认值为 16), tramp 模式下的远程密码将不再失效
;;; record_14 14:54 2019/11/24 -> 添加 "TAB and SPACE" 一节，高亮显示 buffer 中的 tab 与 trailing space;
;;;                               在 buffer 保存时自动进行 a) 移除 trailing space, b) 将 tab 转换为 空格;
;;; record_15 20:50 2020/05/24 -> 添加 cmake-mode 与 flycheck-clangcheck, multi-term:
;;;                               cmake-mode 用于编辑 CMakeLists.txt 文件，补全比较方便；
;;;                               flycheck-clangcheck 使用 clang-check 进行静态代码分析，可读入 compile_commands.json 文件配置编译参数;
;;;                               添加"c/c++ offset settings." 一节，对于 class 中的 inline member function 不进行缩进;
;;; record_16 15:24 2020/05/30 -> 1. [aha] 移除 flycheck-clangcheck, 发现了更好用的 cmake-ide 自动为 company, flycheck(clang) 设置相应 flags;
;;;                                  无需额外配置，补全与静态代码检查就能很好地工作;
;;;                               2. 将 "TAB and SPACE" 一节调整位置，与 "custom-set-face 将 whitespace 与 tab 设置颜色"放到一起;
;;; record_17 23:17 2021/06/15 -> 1. 配置 f7 为 cmake-ide-compile 命令;
;;;                               2. 仅在 prog-mode 下才开启 display-line-number-mode;
;;; record_18 23:36 2021/06/15 -> 增加 bison-mode 支持 flex 与 bison 文件的编辑;
;;; record_19 12:58 2022/04/28 -> 1. package: 修改 elpa 源，melpa 源已经调整为 https 协议;
;;;                               2. package: 在 package-list 中进行 update 操作升级过旧的 packages(通过 'u' 命令), 否则 lsp-mode 无法正常使用;
;;;                               3. package: 移除 bison-mode(Emacs 已经内置);
;;;                               4. package: 移除 cscope、gtags, 使用 lsp-mode 作为替代; 移除 highlight-symbol, lsp-mode 中的高亮效果较好;
;;;                               5. package: 移除 zenburn 主题，使用 spacemacs-theme 替换, zenburn 在配合 lsp-mode 下进行符号高亮上没有效果;
;;;                               6. package: 移除 slime package 与 配置, 不写 Lisp 好多年了; 移除 exec-from-shell, 似乎只在 mac 下需要;
;;;                               7. package: 移除 server-start 配置，当 Emacs 以 client 连接到同一个 Emacs server 如果当前有多个 project 则 .dir-locals 会干扰;
;;;                               8. 快捷键：将 F7 快捷键配置为 cmake-ide-compile; 调整 helm 中 TAB 键作为补全，之前默认进行 action 太难用了;
;;; record_20 19:59 2022/05/30 -> 1. 快捷键: 将 C-x C-f 设置为 helm-find-files, 补全效果比 Emacs 自动的要好;
;;;                               2. package: 通过设置 projectile 的 projectile-command-map 配置其触发命令依旧为: C-c p;
;;;                               3. package: cmake-ide 在遇到 .h 文件时会尝试在其所有目录下寻找同名的 .cpp 文件并使用将 cflags 编译 .h,
;;;                                           当不存在是会询问是否创建; 通过设置 cmake-ide-header-search-other-file 将其关闭;
;;;                               4. package: 关闭 lsp-mode 的补全功能, 其使用的 company-capf 在 '#include <vector>' 补全时会出来了许多全局符号，禁用;
;;;                               5. package: 添加 yasnippet-snippets package;
;;; record_17 10:31 2022/01/06 -> 1. flycheck 检测增加延迟, 频繁 check 会导致延迟，影响输入体验;
;;;                               2. 在保存之前执行的操作中，当 before-save-delete-trailing-whitespace 为 nil 时, 不执行 delete-trailing-whitespace;
;;;                                                          当不在 go-mode 时, 保存之前不执行 gofmt-before-save;
;;;                               3. 说明: 本修改最初完成于 workspace, 时间为: 22:01 2022/06/01;
